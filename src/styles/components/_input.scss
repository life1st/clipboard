// =============================================================================
// Input 组件样式
// =============================================================================

@use '../variables' as *;
@use '../mixins' as *;

// CSS 变量定义
:root {
  --input-color-default: #333333;
  --input-color-placeholder: #999999;
  --input-color-disabled: #999999;
  --input-color-readonly: #666666;
  --input-color-focus: #667eea;
  --input-color-error: #e53e3e;
  --input-color-success: #10b981;
  --input-color-warning: #f59e0b;
  
  --input-bg-default: rgba(255, 255, 255, 0.9);
  --input-bg-disabled: #f5f5f5;
  --input-bg-readonly: #f9f9f9;
  
  --input-border-default: rgba(0, 0, 0, 0.1);
  --input-border-focus: #667eea;
  --input-border-error: #e53e3e;
  --input-border-success: #10b981;
  --input-border-warning: #f59e0b;
}

// 尺寸配置
$input-sizes: (
  'sm': (
    'padding': 4px 8px,
    'font-size': $font-size-sm,
    'min-height': 32px
  ),
  'md': (
    'padding': 6px 12px,
    'font-size': $font-size-base,
    'min-height': 40px
  ),
  'lg': (
    'padding': 8px 16px,
    'font-size': $font-size-lg,
    'min-height': 48px
  )
);

// 响应式尺寸配置
$input-responsive-sizes: (
  'sm': (
    'padding': 6px 8px,
    'min-height': 36px
  ),
  'md': (
    'padding': 8px 12px,
    'min-height': 44px
  ),
  'lg': (
    'padding': 10px 16px,
    'min-height': 52px
  )
);

// 生成尺寸样式
@mixin input-size($size, $responsive: false) {
  @if $responsive {
    @if $size == 'sm' {
      padding: 6px 8px;
      min-height: 36px;
    } @else if $size == 'md' {
      padding: 8px 12px;
      min-height: 44px;
    } @else if $size == 'lg' {
      padding: 10px 16px;
      min-height: 52px;
    }
  } @else {
    @if $size == 'sm' {
      padding: 4px 8px;
      font-size: $font-size-sm;
      min-height: 32px;
    } @else if $size == 'md' {
      padding: 6px 12px;
      font-size: $font-size-base;
      min-height: 40px;
    } @else if $size == 'lg' {
      padding: 8px 16px;
      font-size: $font-size-lg;
      min-height: 48px;
    }
  }
}

// 生成状态样式
@mixin input-state($state, $color) {
  border-color: $color;
  
  &:focus {
    border-color: $color;
    box-shadow: 0 0 0 2px rgba($color, 0.1);
  }
}

.input {
  display: block;
  width: 100%;
  font-family: inherit;
  font-size: inherit;
  line-height: 1;
  color: var(--input-color-default);
  background: var(--input-bg-default);
  border: 1px solid var(--input-border-default);
  border-radius: 6px;
  transition: all 0.2s ease;
  outline: none;
  
  &::placeholder {
    color: var(--input-color-placeholder);
    opacity: 1;
  }
  
  &:focus {
    border-color: var(--input-border-focus);
    box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.1);
  }
  
  &:disabled {
    background: var(--input-bg-disabled);
    color: var(--input-color-disabled);
    cursor: not-allowed;
    opacity: 0.6;
  }
  
  &:readonly {
    background: var(--input-bg-readonly);
    color: var(--input-color-readonly);
  }
  
  // 尺寸变体
  &--sm {
    @include input-size('sm');
  }
  
  &--md {
    @include input-size('md');
  }
  
  &--lg {
    @include input-size('lg');
  }
  
  // 宽度变体
  &--full-width {
    width: 100%;
  }
  
  // 输入框类型特定样式
  &[type="password"] {
    font-family: monospace;
    letter-spacing: 0.125em;
  }
  
  &[type="number"] {
    -moz-appearance: textfield;
    
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
  
  // 状态样式
  &.input--error {
    @include input-state('error', var(--input-border-error));
  }
  
  &.input--success {
    @include input-state('success', var(--input-border-success));
  }
  
  &.input--warning {
    @include input-state('warning', var(--input-border-warning));
  }
}

// 输入框容器样式
.input-container {
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
  
  .input {
    flex: 1;
  }
}

// 清空按钮样式
.input-clear {
  flex-shrink: 0;
}

// 响应式设计
@media (max-width: 640px) {
  .input {
    &--sm {
      @include input-size('sm', true);
    }
    
    &--md {
      @include input-size('md', true);
    }
    
    &--lg {
      @include input-size('lg', true);
    }
  }
  
  .input-container {
    gap: 12px;
  }
  
  .input-clear {
    min-width: 32px;
    height: 32px;
    font-size: 16px;
  }
} 